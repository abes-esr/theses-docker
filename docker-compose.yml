#
# Ci-dessous la config qui permet de lancer theses-docker
#
# Remarque: avant de lancer docker-compose up, il faut régler le fichier .env
# en partant du fichier .env-dist qui donne les variables d'environnements
# à personnaliser et des exemples de valeurs.
#

version: "3.5"

services:

  #######################################
  # theses-rp
  # le reverse proxy applicatif de theses.fr
  # toutes les requêtes HTTP passent par lui, il est chargé
  # d'authentifier les utilisateurs avec la fédération d'identités
  # RENATER lorsque ce derniers accèdent à /74979_GERARDIN_2018_archivage.pdf
  # (à adapter)
  theses-rp:
    container_name: theses-rp
    image: abesesr/docker-shibboleth-renater-sp:2.0.3
    restart: unless-stopped
    mem_limit: ${MEM_LIMIT}
    memswap_limit: ${MEM_LIMIT}
    cpus: ${CPU_LIMIT}
    ports:
      - ${THESES_RP_HTTPS_PORT}:443
      - ${THESES_RP_HTTP_PORT}:80
    environment:
      RENATER_SP_TEST_OR_PROD: ${THESES_RP_RENATER_SP_TEST_OR_PROD}
      RENATER_SP_ENTITY_ID: ${THESES_RP_RENATER_SP_ENTITY_ID}
      RENATER_SP_ADMIN_MAIL: ${THESES_RP_RENATER_SP_ADMIN_MAIL}
      RENATER_SP_CERTIFICATE_CRT: ${THESES_RP_RENATER_SP_CERTIFICATE_CRT}
      RENATER_SP_CERTIFICATE_KEY: ${THESES_RP_RENATER_SP_CERTIFICATE_KEY}
      RENATER_SP_HTTPD_SERVER_NAME: ${THESES_RP_RENATER_SP_HTTPD_SERVER_NAME}
      RENATER_SP_HTTPD_LOG_LEVEL: "info ssl:warn"
      RENATER_SP_HTTPD_LOG_FORMAT: '%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" \"%{Shib-Identity-Provider}i\" \"%{eppn}i\" \"%{primary-affiliation}i\" \"%{supannEtablissement}i\"'
      RENATER_SP_HTTPD_PUBLIC_PATH_0: "/"
      RENATER_SP_HTTPD_PUBLIC_PROXY_TO_0: "http://theses-front:3000/"
      #RENATER_SP_HTTPD_PUBLIC_PATH_1: "/poc-fede/"
      #RENATER_SP_HTTPD_PUBLIC_PROXY_TO_1: "http://theses-api-diffusion-poc:80/poc-fede/"
      RENATER_SP_HTTPD_PUBLIC_PATH_1: "/api/v1/button/"
      RENATER_SP_HTTPD_PUBLIC_PROXY_TO_1: "http://theses-api-diffusion:8992/api/v1/button/"
      # pour -prod THESES_RP_KIBANA_PROTECTED_PATH est renseigné mais THESES_KIBANA_PUBLIC_PATH est vide
      RENATER_SP_HTTPD_PROTECTED_PATH_0: ${THESES_RP_KIBANA_PROTECTED_PATH}
      RENATER_SP_HTTPD_PROTECTED_PROXY_TO_0: "http://theses-kibana:5601/"
      RENATER_SP_HTTPD_PROTECTED_PATH_1: "/api/v1/document/protected/"
      RENATER_SP_HTTPD_PROTECTED_PROXY_TO_1: "http://theses-api-diffusion:8992/api/v1/document/protected/"
      #RENATER_SP_HTTPD_PROTECTED_REQUIRE_1_0: "Require shib-attr Shib-Identity-Provider https://ciboulette.abes.fr/idp/shibboleth"
      #RENATER_SP_HTTPD_PROTECTED_REQUIRE_1_0: "Require shib-attr Shib-Identity-Provider https://test-idp.federation.renater.fr/idp/shibboleth"
      # pour -local -dev -test mais pour -prod THESES_RP_KIBANA_PUBLIC_PATH est vide et c'est THESES_RP_KIBANA_PROTECTED_PATH qui est renseigné
      RENATER_SP_HTTPD_PUBLIC_PATH_2: ${THESES_RP_KIBANA_PUBLIC_PATH}
      RENATER_SP_HTTPD_PUBLIC_PROXY_TO_2: "http://theses-kibana:5601/"
      RENATER_SP_HTTPD_PUBLIC_PATH_3: "/api/v1/personnes/"
      RENATER_SP_HTTPD_PUBLIC_PROXY_TO_3: "http://theses-api-recherche:8990/api/v1/personnes/"
      RENATER_SP_HTTPD_PUBLIC_PATH_4: "/api/v1/theses/"
      RENATER_SP_HTTPD_PUBLIC_PROXY_TO_4: "http://theses-api-recherche:8990/api/v1/theses/"
      RENATER_SP_HTTPD_PUBLIC_PATH_5: "/sitemap.xml"
      RENATER_SP_HTTPD_PUBLIC_PROXY_TO_5: "http://theses-seo:8991/sitemap.xml"
      RENATER_SP_HTTPD_PUBLIC_PATH_6: "/robots.txt"
      RENATER_SP_HTTPD_PUBLIC_PROXY_TO_6: "http://theses-seo:8991/robots.txt"
      RENATER_SP_HTTPD_PUBLIC_PATH_7: "/api/v1/document/"
      RENATER_SP_HTTPD_PUBLIC_PROXY_TO_7: "http://theses-api-diffusion:8992/api/v1/document/"
      RENATER_SP_HTTPD_PUBLIC_PATH_8: "/api/v1/diffusion/openapi.yaml"
      RENATER_SP_HTTPD_PUBLIC_PROXY_TO_8: "http://theses-api-diffusion:8992/v3/api-docs.yaml"
      RENATER_SP_HTTPD_PUBLIC_PATH_9: "/api/v1/recherche/openapi.yaml"
      RENATER_SP_HTTPD_PUBLIC_PROXY_TO_9: "http://theses-api-recherche:8990/v3/api-docs.yaml"
      RENATER_SP_HTTPD_PUBLIC_PATH_10: "/api/v1/export/"
      RENATER_SP_HTTPD_PUBLIC_PROXY_TO_10: "http://theses-api-export:8993/api/v1/export/"
      # redirection export NNT vers nouvelle API
      RENATER_SP_HTTPD_PUBLIC_PATH_11: '^/([a-zA-Z0-9]{12}\.(tefudoc|xml|ris|bib|rdf))$'
      RENATER_SP_HTTPD_PUBLIC_PROXY_TO_11: "http://theses-api-export:8993/api/v1/export/$1"
      # redirection export numSujet vers nouvelle API
      RENATER_SP_HTTPD_PUBLIC_PATH_12: '^/(s[0-9]+\.(xml|tefudoc|ris|bib|rdf))$'
      RENATER_SP_HTTPD_PUBLIC_PROXY_TO_12: "http://theses-api-export:8993/api/v1/export/$1"
      RENATER_SP_HTTPD_PUBLIC_PATH_13: "/api/v1/export/openapi.yaml"
      RENATER_SP_HTTPD_PUBLIC_PROXY_TO_13: "http://theses-api-export:8993/v3/api-docs.yaml"
      RENATER_SP_HTTPD_PUBLIC_PATH_14: '^/([a-zA-Z0-9]{12})\/document$'
      RENATER_SP_HTTPD_PUBLIC_PROXY_TO_14: "http://theses-api-diffusion:8992/api/v1/document/$1"
      
      
     
    volumes:
      - ./volumes/theses-rp/shibboleth/ssl/:/etc/shibboleth/ssl/
    # Ces commentaires sont conservés pour expliquer pourquoi theses-rp ne dépend pas des autres conteneurs
    # la raison est que theses-rp est relativement long à démarrer (plusieurs minutes) et qu'il ne sera que
    # très rarrement mis à jour, donc autant ne pas le redémarrer si jamais une de ses dépendance redémarre.
    #depends_on:
    #  - theses-api-diffusion-poc
    #  - theses-api-recherche
    #  - theses-front
    labels:
      # pour envoyer les logs dans le puits de log de l'abes
      - "co.elastic.logs/enabled=true"
      - "co.elastic.logs/processors.add_fields.target="
      - "co.elastic.logs/processors.add_fields.fields.abes_appli=theses"
      - "co.elastic.logs/processors.add_fields.fields.abes_middleware=apache"



  #######################################
  # theses-front
  # Interface utilisateur de theses.fr (dévelopée en VueJS)
  theses-front:
    container_name: theses-front
    image: abesesr/theses:${THESES_FRONT_VERSION}
    restart: unless-stopped
    mem_limit: ${MEM_LIMIT}
    memswap_limit: ${MEM_LIMIT}
    cpus: ${CPU_LIMIT}
    ports:
      - ${THESES_FRONT_HTTP_PORT}:3000
    environment:
      NUXT_PUBLIC_API: ${THESES_FRONT_VITE_APP_API}
      NUXT_PUBLIC_APIREF: ${THESES_FRONT_VITE_APP_APIREF}
    depends_on:
      - theses-api-diffusion
      - theses-api-recherche
    labels:
      # pour envoyer les logs dans le puits de log de l'abes
      - "co.elastic.logs/enabled=true"
      - "co.elastic.logs/processors.add_fields.target="
      - "co.elastic.logs/processors.add_fields.fields.abes_appli=theses"
      - "co.elastic.logs/processors.add_fields.fields.abes_middleware=nginx"
      # pour que les mises à jour de cette image soient auto-déployées par watchtower 
      - "com.centurylinklabs.watchtower.scope=theses-watchtower-scope"


  #######################################
  # theses-api-diffusion
  # API de diffusion des thèses en java spring de theses.fr
  theses-api-diffusion:
    container_name: theses-api-diffusion
    image: abesesr/theses:${THESES_API_DIFFUSION_VERSION}
    restart: unless-stopped
    mem_limit: ${MEM_LIMIT}
    memswap_limit: ${MEM_LIMIT}
    cpus: ${CPU_LIMIT}
    ports:
      - ${THESES_API_DIFFUSION_HTTP_PORT}:8992
    volumes:
      - ${THESES_PATH_HOST}:${THESES_PATH_LOCAL}
    environment:
      SERVER_PORT: 8992
      SPRING_DATASOURCE_URL: ${THESES_SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${THESES_SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${THESES_SPRING_DATASOURCE_PASSWORD}
      TEL_USERID: ${THESES_TEL_USERID}
      TEL_PASSWORD: ${THESES_TEL_PASSWORD}
      TEL_HOSTSWORD: ${THESES_TEL_HOSTSWORD}
      THESES_PATH_LOCAL: ${THESES_PATH_LOCAL}
      CHASSEAUXLIVRES_URL: ${THESES_CHASSEAUXLIVRES_URL}
      CHASSEAUXLIVRES_KEY: ${THESES_CHASSEAUXLIVRES_KEY}
      LOGGING_LEVEL_FR_ABES: ${THESES_LOGGING_LEVEL_FR_ABES_DIFFUSION}
      JAVA_OPTS: "-Doracle.jdbc.timezoneAsRegion=false -Duser.timezone=CEST"
      URL_PORTAIL: ${THESES_RACINE}
    labels:
      # pour envoyer les logs dans le puits de log de l'abes
      - "co.elastic.logs/enabled=true"
      - "co.elastic.logs/processors.add_fields.target="
      - "co.elastic.logs/processors.add_fields.fields.abes_appli=theses"
      - "co.elastic.logs/processors.add_fields.fields.abes_middleware=spring"
      # pour que les mises à jour de cette image soient auto-déployées par watchtower
      - "com.centurylinklabs.watchtower.scope=theses-watchtower-scope"       

  #######################################
  # theses-api-recherche
  # API de recherche de theses.fr
  theses-api-recherche:
    container_name: theses-api-recherche
    image: abesesr/theses:${THESES_API_RECHERCHE_VERSION}
    depends_on:
      theses-elasticsearch:
        condition: service_healthy
      theses-elasticsearch-setupusers:
        condition: service_healthy
    restart: unless-stopped
    mem_limit: ${MEM_LIMIT}
    memswap_limit: ${MEM_LIMIT}
    cpus: ${CPU_LIMIT}
    ports:
      - ${THESES_API_RECHERCHE_HTTP_PORT}:8990
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILE_ACTIVE}
      SERVER_PORT: 8990
      ES_HOSTNAME: 'theses-elasticsearch-01'
      ES_HOSTNAME2: ${THESES_ELASTICSEARCH_HOST2}
      ES_HOSTNAME3: ${THESES_ELASTICSEARCH_HOST3}
      ES_HOSTNAME4: ${THESES_ELASTICSEARCH_HOST4}
      ES_PORT: ${THESES_ELASTICSEARCH_HTTP_PORT}
      ES_PROTOCOL: 'https'
      ES_USERNAME: ${THESES_API_RECHERCHE_ELASTIC_USERNAME}
      ES_PASSWORD: ${THESES_API_RECHERCHE_ELASTIC_PASSWORD}
      ES_THESES_INDEXNAME: ${THESES_ELASTICSEARCH_THESES_INDEXNAME}
      ES_PERSONNES_INDEXNAME: ${THESES_ELASTICSEARCH_PERSONNES_INDEXNAME}
      ES_PERSONNES_RECHERCHE_INDEXNAME: ${THESES_ELASTICSEARCH_PERSONNES_RECHERCHE_INDEXNAME}
      SPRING_DATASOURCE_URL: ${THESES_SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${THESES_SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${THESES_SPRING_DATASOURCE_PASSWORD}
      GOOGLE_RECAPTCHA_KEY_SITE: ${THESES_GOOGLE_RECAPTCHA_KEY_SITE}
      GOOGLE_RECAPTCHA_KEY_SECRET: ${THESES_GOOGLE_RECAPTCHA_KEY_SECRET}
      GOOGLE_RECAPTCHA_KEY_THRESHOLD: ${THESES_GOOGLE_RECAPTCHA_KEY_THRESHOLD}
      THESES_MAIL: ${THESES_MAIL}
      MAIL_WS: ${THESES_MAIL_WS}
      JAVA_OPTS: "-Doracle.jdbc.timezoneAsRegion=false -Duser.timezone=CEST"
    labels:
      # pour envoyer les logs dans le puits de log de l'abes
      - "co.elastic.logs/enabled=true"
      - "co.elastic.logs/processors.add_fields.target="
      - "co.elastic.logs/processors.add_fields.fields.abes_appli=theses"
      - "co.elastic.logs/processors.add_fields.fields.abes_middleware=spring"
      # pour que les mises à jour de cette image soient auto-déployées par watchtower
      - "com.centurylinklabs.watchtower.scope=theses-watchtower-scope" 



  #######################################
  # theses-seo
  # Fournit le sitemap et le robot.txt de theses.fr
  
  theses-seo:
    container_name: theses-seo
    image: abesesr/theses:${THESES_SEO_VERSION}
    depends_on:
      theses-elasticsearch:
        condition: service_healthy
    restart: unless-stopped
    mem_limit: ${MEM_LIMIT}
    memswap_limit: ${MEM_LIMIT}
    cpus: ${CPU_LIMIT}
    environment:
      SERVER_PORT: 8991
      ES_HOSTNAME: 'theses-elasticsearch-01'
      ES_PORT: ${THESES_ELASTICSEARCH_HTTP_PORT}
      ES_PROTOCOL: 'https'
      ES_USERNAME: ${THESES_API_RECHERCHE_ELASTIC_USERNAME}
      ES_PASSWORD: ${THESES_API_RECHERCHE_ELASTIC_PASSWORD}
      ES_THESES_INDEXNAME: ${THESES_ELASTICSEARCH_THESES_INDEXNAME}
      NBURLSPAGE: ${THESES_SEO_NBURLSPAGE}
      RACINE: ${THESES_RACINE}
    labels:
      # pour envoyer les logs dans le puits de log de l'abes
      - "co.elastic.logs/enabled=true"
      - "co.elastic.logs/processors.add_fields.target="
      - "co.elastic.logs/processors.add_fields.fields.abes_appli=theses"
      - "co.elastic.logs/processors.add_fields.fields.abes_middleware=spring"
      # pour que les mises à jour de cette image soient auto-déployées par watchtower
      - "com.centurylinklabs.watchtower.scope=theses-watchtower-scope" 

  #######################################
  # theses-api-export
  # API d'exportation des métadonnées des thèses de theses.fr
  
  theses-api-export:
    container_name: theses-api-export
    image: abesesr/theses:${THESES_API_EXPORT_VERSION}
    restart: unless-stopped
    mem_limit: ${MEM_LIMIT}
    memswap_limit: ${MEM_LIMIT}
    cpus: ${CPU_LIMIT}
    ports:
      - ${THESES_API_EXPORT_HTTP_PORT}:8993
    volumes:
      - ${THESES_PATH_XSL_HOST}:${THESES_PATH_XSL_LOCAL}
    environment:
      SERVER_PORT: 8993
      SPRING_DATASOURCE_URL: ${THESES_SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${THESES_SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${THESES_SPRING_DATASOURCE_PASSWORD}
  
      PATH_XSLS: ${THESES_PATH_XSL_LOCAL}
      RACINE: ${THESES_RACINE}
      LOGGING_LEVEL_FR_ABES: ${THESES_LOGGING_LEVEL_FR_ABES_EXPORT}
      JAVA_OPTS: "-Doracle.jdbc.timezoneAsRegion=false -Duser.timezone=CEST"
    labels:
      # pour envoyer les logs dans le puits de log de l'abes
      - "co.elastic.logs/enabled=true"
      - "co.elastic.logs/processors.add_fields.target="
      - "co.elastic.logs/processors.add_fields.fields.abes_appli=theses"
      - "co.elastic.logs/processors.add_fields.fields.abes_middleware=spring"
      # pour que les mises à jour de cette image soient auto-déployées par watchtower
      - "com.centurylinklabs.watchtower.scope=theses-watchtower-scope"       

  #######################################
  # theses-batch-indexation-sample
  # batch pour charger quelques thèses et quelques personnes dans des indexes échantillon
  # theses-sample, personnes-sample, et recherche_personnes-sample
  theses-batch-indexation-sample:
    container_name: theses-batch-indexation-sample
    image: abesesr/theses:${THESES_BATCH_INDEXATION_SAMPLE_VERSION}
    mem_limit: ${MEM_LIMIT}
    memswap_limit: ${MEM_LIMIT}
    cpus: ${CPU_LIMIT}
    depends_on:
      theses-elasticsearch:
        condition: service_healthy
    environment:
      ELASTICSEARCH_PASSWORD: ${THESES_ELASTICSEARCH_PASSWORD}
      ELASTICSEARCH_HOST_PORT: "theses-elasticsearch-01:${THESES_ELASTICSEARCH_HTTP_PORT}"
    labels:
      # pour envoyer les logs dans le puits de log de l'abes
      - "co.elastic.logs/enabled=true"
      - "co.elastic.logs/processors.add_fields.target="
      - "co.elastic.logs/processors.add_fields.fields.abes_appli=theses"
      - "co.elastic.logs/processors.add_fields.fields.abes_middleware=adhoc"
      # pour que les mises à jour de cette image soient auto-déployées par watchtower
      - "com.centurylinklabs.watchtower.scope=theses-watchtower-scope" 



  #######################################
  # theses-batch-indexation
  # batch pour indexer les thèses dans elasticsearch
  #
  theses-batch-indexation:
    container_name: theses-batch-indexation
    image: abesesr/theses:${THESES_BATCH_INDEXATION_VERSION}
    mem_limit: ${MEM_LIMIT}
    memswap_limit: ${MEM_LIMIT}
    cpus: ${CPU_LIMIT}
    depends_on:
      theses-elasticsearch:
        condition: service_healthy
    environment:
      ELASTIC_USERNAME: 'elastic'
      ELASTIC_PASSWORD: ${THESES_ELASTICSEARCH_PASSWORD}
      ELASTIC_HOSTNAME: 'theses-elasticsearch-01'
      ELASTIC_PORT: ${THESES_ELASTICSEARCH_HTTP_PORT}
      ELASTIC_PROTOCOL: 'https'
      ELASTIC_SCHEME: 'https'
      SPRING_DATASOURCE_URL: ${THESES_SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${THESES_SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${THESES_SPRING_DATASOURCE_PASSWORD}
      SPRING_DATASOURCE_HIKARI_MINIMUMIDLE: 3
      SPRING_DATASOURCE_HIKARI_MAXIMUMPOOLSIZE: 15
      SPRING_PROFILES_ACTIVE: ${THESES_BATCH_SPRING_PROFILES_ACTIVE}
      SPRING_BATCH_INITIALIZE-SCHEMA: 'always'
      JOB_WHERE_LIMITE: ${THESES_BATCH_JOB_WHERE_LIMITE}
      JOB_CHUNK: ${THESES_BATCH_JOB_CHUNK}
      JOB_THROTTLE: 6
      TABLE_NAME: ${THESES_BATCH_TABLE_NAME}
      INDEX_NAME: ${THESES_BATCH_INDEX_NAME}
      TABLE_PERSONNE_NAME: ${THESES_BATCH_TABLE_PERSONNE_NAME}
      INDEX_PATHTHESES: ${THESES_BATCH_INDEX_PATHTHESES}
      INDEX_PATHPERSONNES: ${THESES_BATCH_INDEX_PATHPERSONNES}
      INDEX_PATHTHEMATIQUES: ${THESES_BATCH_INDEX_PATHTHEMATIQUES}
      INDEX_PATHRECHERCHEPERSONNES: ${THESES_BATCH_INDEX_PATHRECHERCHEPERSONNES}
      OAISETS_PATH: ${THESES_BATCH_OAISETS_PATH}
      THESES_BATCH_INDEXATION_THESES_CRON: ${THESES_BATCH_INDEXATION_THESES_CRON}
      THESES_BATCH_SUPPRESSION_THESES_CRON: ${THESES_BATCH_SUPPRESSION_THESES_CRON}
      THESES_BATCH_INDEXATION_THEMATIQUES_CRON: ${THESES_BATCH_INDEXATION_THEMATIQUES_CRON}
      THESES_BATCH_SUPPRESSION_THEMATIQUES_CRON: ${THESES_BATCH_SUPPRESSION_THEMATIQUES_CRON}
      THESES_BATCH_INDEXATION_PERSONNES_CRON: ${THESES_BATCH_INDEXATION_PERSONNES_CRON}
      THESES_BATCH_SUPPRESSION_PERSONNES_CRON: ${THESES_BATCH_SUPPRESSION_PERSONNES_CRON}
      TABLE_AJOUT_PERSONNE_NAME: ${THESES_BATCH_TABLE_AJOUT_PERSONNE_NAME}
      TABLE_SUPPRESSION_PERSONNE_NAME: ${THESES_BATCH_TABLE_SUPPRESSION_PERSONNE_NAME}
      LOGGING_LEVEL_FR_ABES: ${THESES_LOGGING_LEVEL_FR_ABES_BATCH}
      
      
      
    labels:
      # pour envoyer les logs dans le puits de log de l'abes
      - "co.elastic.logs/enabled=true"
      - "co.elastic.logs/processors.add_fields.target="
      - "co.elastic.logs/processors.add_fields.fields.abes_appli=theses"
      - "co.elastic.logs/processors.add_fields.fields.abes_middleware=spring"
      # pour que les mises à jour de cette image soient auto-déployées par watchtower
      - "com.centurylinklabs.watchtower.scope=theses-watchtower-scope" 



  #######################################
  # theses-elasticsearch-setupcerts
  # conteneur chargé de configurer les certificats pour que les X noeuds elasticsearch communiquent entre eux de façon sécurisé
  # - créer les différents comptes applicatifs pour accès à elasticsearch
  theses-elasticsearch-setupcerts:
    container_name: theses-elasticsearch-setupcerts
    image: docker.elastic.co/elasticsearch/elasticsearch:${THESES_ELASTICSEARCH_VERSION}
    mem_limit: ${MEM_LIMIT}
    memswap_limit: ${MEM_LIMIT}
    cpus: ${CPU_LIMIT}
    volumes:
      - ./volumes/theses-elasticsearch-setupcerts/:/usr/share/elasticsearch/config/certs/
    user: "0"
    command: >
      bash -c '
        if [ ! -f config/certs/ca.zip ]; then
          echo "Creating CA";
          bin/elasticsearch-certutil ca --silent --pem -out config/certs/ca.zip;
          unzip -o config/certs/ca.zip -d config/certs;
        fi;
        if [ ! -f config/certs/certs.zip ]; then
          echo "Creating certs";
          echo -ne \
          "instances:\n"\
          "  - name: es-01\n"\
          "    dns:\n"\
          "      - theses-elasticsearch-01\n"\
          "      - localhost\n"\
          "    ip:\n"\
          "      - 127.0.0.1\n"\
          "  - name: es-02\n"\
          "    dns:\n"\
          "      - theses-elasticsearch-02\n"\
          "      - localhost\n"\
          "    ip:\n"\
          "      - 127.0.0.1\n"\
          "  - name: es-03\n"\
          "    dns:\n"\
          "      - theses-elasticsearch-03\n"\
          "      - localhost\n"\
          "    ip:\n"\
          "      - 127.0.0.1\n"\
          "  - name: es-04\n"\
          "    dns:\n"\
          "      - theses-elasticsearch-04\n"\
          "      - localhost\n"\
          "    ip:\n"\
          "      - 127.0.0.1\n"\
          "  - name: es-05\n"\
          "    dns:\n"\
          "      - theses-elasticsearch-05\n"\
          "      - localhost\n"\
          "    ip:\n"\
          "      - 127.0.0.1\n"\
          > config/certs/instances.yml;
          bin/elasticsearch-certutil cert --silent --pem -out config/certs/certs.zip --in config/certs/instances.yml --ca-cert config/certs/ca/ca.crt --ca-key config/certs/ca/ca.key;
          unzip -o config/certs/certs.zip -d config/certs;
        fi;
        echo "Setting file permissions"
        chown -R root:root config/certs;
        find . -type d -exec chmod 750 \{\} \;;
        find . -type f -exec chmod 640 \{\} \;;
        echo "All done!";
        sleep infinity; # never stop the container because elasticsearch depends on it
      '
    healthcheck:
      test: ["CMD-SHELL", "[ -f config/certs/es-01/es-01.crt ]"]
      interval: 10s
      timeout: 5s
      retries: 120
    labels:
      # pour envoyer les logs dans le puits de log de l'abes
      - "co.elastic.logs/enabled=true"
      - "co.elastic.logs/processors.add_fields.target="
      - "co.elastic.logs/processors.add_fields.fields.abes_appli=theses"
      - "co.elastic.logs/processors.add_fields.fields.abes_middleware=adhoc"



  #######################################
  # theses-elasticsearch-setupusers
  # conteneur chargé de créer les différents comptes applicatifs pour accès à elasticsearch et aussi le compte pour kibana
  # Création/mises à jour des login/mot de passe pour :
  # - theses-api-recherche
  # - kibana_system
  theses-elasticsearch-setupusers:
    container_name: theses-elasticsearch-setupusers
    image: docker.elastic.co/elasticsearch/elasticsearch:${THESES_ELASTICSEARCH_VERSION}
    mem_limit: ${MEM_LIMIT}
    memswap_limit: ${MEM_LIMIT}
    cpus: ${CPU_LIMIT}
    depends_on:
      theses-elasticsearch:
        condition: service_healthy
    volumes:
      - ./volumes/theses-elasticsearch-setupcerts/:/usr/share/elasticsearch/config/certs/
    environment:
      THESES_KIBANA_PASSWORD: ${THESES_KIBANA_PASSWORD}
      THESES_ELASTICSEARCH_PASSWORD: ${THESES_ELASTICSEARCH_PASSWORD}
      THESES_ELASTICSEARCH_HTTP_PORT: ${THESES_ELASTICSEARCH_HTTP_PORT}
      THESES_API_RECHERCHE_ELASTIC_USERNAME: ${THESES_API_RECHERCHE_ELASTIC_USERNAME} 
      THESES_API_RECHERCHE_ELASTIC_PASSWORD: ${THESES_API_RECHERCHE_ELASTIC_PASSWORD} 
    command: >
      bash -c '
        if [ x${THESES_ELASTICSEARCH_PASSWORD} == x ]; then
          echo "Set the THESES_ELASTICSEARCH_PASSWORD environment variable in the .env file";
          exit 1;
        elif [ x${THESES_KIBANA_PASSWORD} == x ]; then
          echo "Set the THESES_KIBANA_PASSWORD environment variable in the .env file";
          exit 1;
        fi;
        echo "Setting kibana_system password";
        until curl -X POST --cacert config/certs/ca/ca.crt -u elastic:${THESES_ELASTICSEARCH_PASSWORD} -H "Content-Type: application/json" https://theses-elasticsearch-01:${THESES_ELASTICSEARCH_HTTP_PORT}/_security/user/kibana_system/_password -d "{\"password\":\"${THESES_KIBANA_PASSWORD}\"}" | grep -q "^{}"; do sleep 10; done;
        echo "Setting ${THESES_API_RECHERCHE_ELASTIC_USERNAME} password";
        until curl -X POST --cacert config/certs/ca/ca.crt -u elastic:${THESES_ELASTICSEARCH_PASSWORD} -H "Content-Type: application/json" https://theses-elasticsearch-01:${THESES_ELASTICSEARCH_HTTP_PORT}/_security/user/${THESES_API_RECHERCHE_ELASTIC_USERNAME} -d "{\"password\":\"${THESES_API_RECHERCHE_ELASTIC_PASSWORD}\", \"enabled\": true, \"roles\":[\"viewer\"], \"full_name\":\"\", \"email\":\"\"}" | grep -q "^{\"created\":"; do sleep 10; done;        
        echo "All done!";
        sleep infinity; # never stop the container because kibana depends on it
      '
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cacert config/certs/ca/ca.crt -u ${THESES_API_RECHERCHE_ELASTIC_USERNAME}:${THESES_API_RECHERCHE_ELASTIC_PASSWORD} 'https://theses-elasticsearch-01:${THESES_ELASTICSEARCH_HTTP_PORT}/_search?timeout=5s' | grep -q '\"hits\"'",
        ]
      interval: 10s
      timeout: 5s
      retries: 120
    labels:
      # pour envoyer les logs dans le puits de log de l'abes
      - "co.elastic.logs/enabled=true"
      - "co.elastic.logs/processors.add_fields.target="
      - "co.elastic.logs/processors.add_fields.fields.abes_appli=theses"
      - "co.elastic.logs/processors.add_fields.fields.abes_middleware=adhoc"




  #######################################
  # theses-elasticsearch
  # noeud n°1 de l'elasticsearch de theses.fr
  # Ref. https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html
  # cf https://github.com/abes-esr/theses-es-cluster-docker#readme pour le mode cluster
  theses-elasticsearch:
    container_name: theses-elasticsearch-${THESES_ELASTICSEARCH_CLUSTER_NODE_ID}
    depends_on:
      theses-elasticsearch-setupcerts:
        condition: service_healthy
    image: docker.elastic.co/elasticsearch/elasticsearch:${THESES_ELASTICSEARCH_VERSION}
    restart: unless-stopped
    mem_limit: ${MEM_LIMIT}
    memswap_limit: ${MEM_LIMIT}
    cpus: ${CPU_LIMIT}
    volumes:
      - ./volumes/theses-elasticsearch-setupcerts/:/usr/share/elasticsearch/config/certs/
      - ./volumes/theses-elasticsearch/:/usr/share/elasticsearch/data/
      - ./volumes/theses-elasticsearch-tmp/:/usr/share/elasticsearch/tmp/
      - ./volumes/theses-elasticsearch-backup/:${THESES_ELASTICSEARCH_SNAPSHOTS_DIR}
    ports:
      # réglage explicites des ports internes et externes pour pouvoir fonctionner en cluster
      # cf https://blog.cri.epita.fr/post/2019-06-10-elasticsearch-cluster-formation-issue/
      - ${THESES_ELASTICSEARCH_HTTP_PORT}:${THESES_ELASTICSEARCH_HTTP_PORT}
      - ${THESES_ELASTICSEARCH_TRANSPORT_PORT}:${THESES_ELASTICSEARCH_TRANSPORT_PORT}
    environment:
      # mot de passe superadmin correspondant au login "elastic"
      - ELASTIC_PASSWORD=${THESES_ELASTICSEARCH_PASSWORD}
      # réglage explicites des ports internes et externes pour pouvoir fonctionner en cluster
      # cf https://blog.cri.epita.fr/post/2019-06-10-elasticsearch-cluster-formation-issue/
      - http.port=${THESES_ELASTICSEARCH_HTTP_PORT}
      - transport.port=${THESES_ELASTICSEARCH_TRANSPORT_PORT}
      - network.publish_host=${THESES_ELASTICSEARCH_CLUSTER_PUBLISH_HOST}
      # paramétrage du cluster elasticsearch
      - node.name=theses-es-${THESES_ELASTICSEARCH_CLUSTER_NODE_ID}
      - node.roles=${THESES_ELASTICSEARCH_CLUSTER_NODE_ROLES}
      - cluster.name=${THESES_ELASTICSEARCH_CLUSTER_NAME}
      - cluster.initial_master_nodes=${THESES_ELASTICSEARCH_CLUSTER_INITIAL_MASTER_NODES}
      - discovery.seed_hosts=${THESES_ELASTICSEARCH_CLUSTER_DISCOVER_SEED_HOSTS}
      # pour désactiver les recherches complexe (conseillé par https://checkups.opster.com/checkup/result/75470)
      # "Recommendations : Allow expensive queries can be disabled by setting config search.allow_expensive_queries: false in the yaml config file and then restarting the node."
      - search.allow_expensive_queries=true
      # pour la quantité de données mises en cache
      # https://www.elastic.co/guide/en/elasticsearch/reference/current/shard-request-cache.html#_cache_settings
      - indices.requests.cache.size=10%
      # réglage pour désactiver le swap: https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html#_disable_swapping
      - bootstrap.memory_lock=true
      # pour éviter que les dump geoip soient téléchargés régulièrement dans /tmp/
      # cf https://abes-esr.atlassian.net/browse/THE-188
      # cf https://www.elastic.co/guide/en/elasticsearch/reference/current/geoip-processor.html#geoip-cluster-settings
      # cf https://www.elastic.co/guide/en/elasticsearch/reference/current/executable-jna-tmpdir.html
      - ingest.geoip.downloader.enabled=false
      - ES_TMPDIR=/usr/share/elasticsearch/tmp
      # paramètres de sécurité d'elasticsearch
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=certs/es-${THESES_ELASTICSEARCH_CLUSTER_NODE_ID}/es-${THESES_ELASTICSEARCH_CLUSTER_NODE_ID}.key
      - xpack.security.http.ssl.certificate=certs/es-${THESES_ELASTICSEARCH_CLUSTER_NODE_ID}/es-${THESES_ELASTICSEARCH_CLUSTER_NODE_ID}.crt
      - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.http.ssl.verification_mode=certificate
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.key=certs/es-${THESES_ELASTICSEARCH_CLUSTER_NODE_ID}/es-${THESES_ELASTICSEARCH_CLUSTER_NODE_ID}.key
      - xpack.security.transport.ssl.certificate=certs/es-${THESES_ELASTICSEARCH_CLUSTER_NODE_ID}/es-${THESES_ELASTICSEARCH_CLUSTER_NODE_ID}.crt
      - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.verification_mode=certificate
      # licence à utiliser (basic ou trial pour un essai de 30 jours)
      - xpack.license.self_generated.type=basic
      # le port http pour le healthcheck d'elasticsearch
      - THESES_ELASTICSEARCH_HTTP_PORT=${THESES_ELASTICSEARCH_HTTP_PORT}
      # pour les sauvegardes (snapshots)
      - path.repo=${THESES_ELASTICSEARCH_SNAPSHOTS_DIR}
      # pour avoir plus ou moins de logs elasticsearch
      # DEBUG ou INFO (en prod mettre INFO)
      - logger.org.elasticsearch.discovery=INFO
    # réglage ulimits pour désactiver le swap: https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html#_disable_swapping
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cacert config/certs/ca/ca.crt -u elastic:${THESES_ELASTICSEARCH_PASSWORD} 'https://localhost:${THESES_ELASTICSEARCH_HTTP_PORT}/_cluster/health?timeout=5s&pretty=true' | grep status | grep -E -q '${THESES_ELASTICSEARCH_CLUSTER_HEALTHY_STATUS}'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120
    labels:
      # pour envoyer les logs dans le puits de log de l'abes
      - "co.elastic.logs/enabled=true"
      - "co.elastic.logs/processors.add_fields.target="
      - "co.elastic.logs/processors.add_fields.fields.abes_appli=theses"
      - "co.elastic.logs/processors.add_fields.fields.abes_middleware=elasticsearch"



  #######################################
  # theses-kibana
  # kibana est le backoffice de l'elasticsearch de theses.fr
  theses-kibana:
    container_name: theses-kibana
    depends_on:
      theses-elasticsearch-setupusers:
        condition: service_healthy
      theses-elasticsearch:
        condition: service_healthy
    image: docker.elastic.co/kibana/kibana:${THESES_ELASTICSEARCH_VERSION}
    restart: unless-stopped
    mem_limit: ${MEM_LIMIT}
    memswap_limit: ${MEM_LIMIT}
    cpus: ${CPU_LIMIT}
    volumes:
      - ./volumes/theses-elasticsearch-setupcerts/:/usr/share/kibana/config/certs/
      - ./volumes/theses-kibana/:/usr/share/kibana/data/
    environment:
      SERVER_BASEPATH: "/kibana"
      ELASTICSEARCH_HOSTS: "https://theses-elasticsearch-01:${THESES_ELASTICSEARCH_HTTP_PORT}"
      ELASTICSEARCH_USERNAME: "kibana_system"
      ELASTICSEARCH_PASSWORD: ${THESES_KIBANA_PASSWORD}
      ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES: "config/certs/ca/ca.crt"
      xpack.reporting.roles.enabled: "false"
      XPACK_SECURITY_ENCRYPTIONKEY: ${THESES_KIBANA_SECURITY_ENCRYPTIONKEY}
      LOGGING_ROOT_LEVEL: "info" # ex: "info", "error", "warn", "fatal", "debug"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120
    labels:
      # pour envoyer les logs dans le puits de log de l'abes
      - "co.elastic.logs/enabled=true"
      - "co.elastic.logs/processors.add_fields.target="
      - "co.elastic.logs/processors.add_fields.fields.abes_appli=theses"
      - "co.elastic.logs/processors.add_fields.fields.abes_middleware=kibana"



  #######################################
  # theses-watchtower
  # Conteneur chargé de mettre à jour automatiquement toutes les X secondes 
  # les images docker des conteneurs en développement come par exemple theses-front
  # (cf WATCHTOWER_SCOPE et les labels en rapport dans la configuration docker-compose de theses-front)
  # cela permet de faire du déploiement continue en attendant les déploiement Ansible 
  # ce conteneur devra donc être supprimé une fois que le déploiement Ansible sera en place
  # plus d'info : https://containrrr.dev/watchtower
  # cf README.md pour explications : https://github.com/abes-esr/theses-docker#d%C3%A9ploiement-continu
  theses-watchtower:
    image: containrrr/watchtower:1.4.0
    container_name: theses-watchtower
    mem_limit: ${MEM_LIMIT}
    memswap_limit: ${MEM_LIMIT}
    cpus: ${CPU_LIMIT}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_POLL_INTERVAL: 60
      WATCHTOWER_DEBUG: "false"
      WATCHTOWER_NO_STARTUP_MESSAGE: "true"
      WATCHTOWER_WARN_ON_HEAD_FAILURE: "never"
      WATCHTOWER_RUN_ONCE: ${THESES_WATCHTOWER_RUN_ONCE}
      WATCHTOWER_NOTIFICATIONS: "slack"
      WATCHTOWER_NOTIFICATION_SLACK_HOOK_URL: ${THESES_WATCHTOWER_NOTIFICATION_SLACK_HOOK_URL}
      WATCHTOWER_NOTIFICATION_SLACK_IDENTIFIER: ${THESES_WATCHTOWER_NOTIFICATION_SLACK_IDENTIFIER}
      WATCHTOWER_NOTIFICATION_SLACK_CHANNEL: "#notif-theses"
      WATCHTOWER_SCOPE: "theses-watchtower-scope"
    labels:
      - "com.centurylinklabs.watchtower.scope=theses-watchtower-scope"   



# Cette configuration peut être décommentée pour pouvoir monter un cluster local elasticsearch
# elle permet de lancer plusieurs noeuds indépendants au niveau docker mais reliés par ce réseau commun
# pour lancer deux noeuds sur la même machine, il suffit alors de :
# 1) créer ce réseau via "docker network create theses-docker-es-cluster-network"
# 2) pour le noeud 2 utiliser la config suivante : https://github.com/abes-esr/theses-es-cluster-docker/
# 3) paramétrer le .env de chaque noeud avec THESES_ELASTICSEARCH_CLUSTER_NODE_ID qui vaut "01" ou "02" (fonction du noeud) :
#    THESES_ELASTICSEARCH_CLUSTER_NODE_ID=02
#    THESES_ELASTICSEARCH_CLUSTER_NODE_ROLES=[data]
#    THESES_ELASTICSEARCH_CLUSTER_DISCOVER_SEED_HOSTS=theses-elasticsearch-01:10305,theses-elasticsearch-02:10305
#    THESES_ELASTICSEARCH_CLUSTER_INITIAL_MASTER_NODES=theses-es-02
# 4) lancer les deux noeuds dans leurs deux répertoires dédié avec "docker-compose up"
#networks:
#  default:
#    name: theses-docker-es-cluster-network
#    external: true

